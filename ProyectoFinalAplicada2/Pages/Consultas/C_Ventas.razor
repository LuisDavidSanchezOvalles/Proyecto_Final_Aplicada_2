@page "/consultaVentas"

@using BLL;
@using Models;

@inject IToastService toast

<div class="card">
    <div class="card-header">
        <h1>Consulta de Ventas</h1>
    </div>

    <div class="card-body">
        <form>
            <label>Filtro</label>
            <div class="col">
                <select class="form-control" @bind="Filtro">
                    <option value="0">Todos</option>
                    <option value="1">VentaId</option>
                    <option value="2">ClienteId</option>
                    <option value="3">UsuarioId</option>
                </select>
            </div>

            <div class="col">
                <div class="form-group">
                    <label>Criterio</label>
                    <div class="input-group">
                        <input type="text" @bind="Criterio" class="form-control">
                        <div class="input-group-append">
                            <button type="button" class="btn btn-primary input-group-text" @onclick="Consultar"><i class="oi oi-list-rich"/> Consultar</button>
                        </div>
                    </div>
                </div>
            </div>

            @*La Tabla*@
            <div class="table-responsive text-nowrap" style="position: relative; height:200px; overflow: auto; display: block;">
                <table class="table table-striped">
                    <thead class="thead-light">
                        <tr>
                            <th>VentaId</th>
                            <th>ClienteId</th>
                            <th>Nombres</th>
                            <th>Total</th>
                            <th>Balance</th>
                            <th>UsuarioId</th>
                        </tr>
                    </thead>
                    @*Asignacion de Datos*@
                    <tbody class="bg-white">
                        @foreach (var item in ListaVentas)
                        {
                            <tr>
                                <td>@item.VentaId</td>
                                <td>@item.ClienteId</td>
                                <td>@ObtenerNombre(item.ClienteId)</td>
                                <td>@item.Total</td>
                                <td>@item.Balance</td>
                                <td>@item.UsuarioId</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </form>
    </div>

    <div class="card-footer">
        <div class="form-group text-center">
            <a class="btn btn-lg btn-primary oi oi-file" href="/ReporteVentas"> Generar Reporte</a>
        </div>
    </div>
</div>

@code {
    public List<Ventas> ListaVentas { get; set; }

    public string Filtro { get; set; }

    public string Criterio { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
    }

    private string ObtenerNombre(int id)
    {
        Clientes cliente = ClientesBLL.Buscar(id);

        return cliente.Nombres;
    }

    private void Nuevo()
    {
        ListaVentas = new List<Ventas>();
        Filtro = "0";
        Criterio = string.Empty;
    }

    public void Consultar()
    {
        switch (Filtro)
        {
            case "0": //Todo
                ListaVentas = VentasBLL.GetList(v => true);
                break;
            case "1": //VentaId
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        int id = Convert.ToInt32(Criterio);
                        ListaVentas = VentasBLL.GetList(v => v.VentaId == id);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un número");
                    }
                }
                else
                {
                    ListaVentas = VentasBLL.GetList(v => true).OrderBy(v => v.VentaId).ToList();
                }
                break;
            case "2": //ClientesId
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        int id = Convert.ToInt32(Criterio);
                        ListaVentas = VentasBLL.GetList(v => v.ClienteId == id);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un número");
                    }
                }
                else
                {
                    ListaVentas = VentasBLL.GetList(v => true).OrderBy(v => v.ClienteId).ToList();
                }
                break;
            case "3": //UsuarioId
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        int usuarioId = Convert.ToInt32(Criterio);
                        ListaVentas = VentasBLL.GetList(v => v.UsuarioId == usuarioId);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un número");
                    }
                }
                else
                {
                    ListaVentas = VentasBLL.GetList(v => true).OrderBy(v => v.UsuarioId).ToList();
                }
                break;
            default:
                ListaVentas = VentasBLL.GetList(c => true);
                break;
        }
    }
}