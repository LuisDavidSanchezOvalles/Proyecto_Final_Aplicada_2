@page "/consultaCacaos"

@using BLL;
@using Models;

@inject IToastService toast

<div class="card">
    <div class="card-header">
        <h1>Consulta de Cacaos</h1>
    </div>

    <div class="card-body">
        <form>
            <label>Filtro</label>
            <div class="col">
                <select class="form-control" @bind="Filtro">
                    <option value="0">Todos</option>
                    <option value="1">Id</option>
                    <option value="2">Tipo</option>
                    <option value="3">Cantidad</option>
                    <option value="4">Costo</option>
                    <option value="5">Precio</option>
                    <option value="6">UsuarioId</option>
                </select>
            </div>

            <div class="col">
                <div class="form-group">
                    <label>Criterio</label>
                    <div class="input-group">
                        <input type="text" @bind="Criterio" class="form-control">
                        <div class="input-group-append">
                            <button type="button" class="btn btn-primary input-group-text" @onclick="Consultar">Consultar</button>
                        </div>
                    </div>
                </div>
            </div>

            <div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>UsuarioId</th>
                            <th>Tipo</th>
                            <th>Cantidad</th>
                            <th>Costo</th>
                            <th>Precio</th>
                            <th>UsuarioId</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cacao in ListaCacaos)
                        {
                            <tr>
                                <td>@cacao.UsuarioId</td>
                                <td>@cacao.Tipo</td>
                                <td>@cacao.Cantidad</td>
                                <td>@cacao.Costo</td>
                                <td>@cacao.Precio</td>
                                <td>@cacao.UsuarioId</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </form>
    </div>
</div>

@code {
    public List<Cacaos> ListaCacaos { get; set; }

    public string Filtro { get; set; }

    public string Criterio { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
    }

    private void Nuevo()
    {
        ListaCacaos = new List<Cacaos>();
        Filtro = "0";
        Criterio = string.Empty;
    }

    public void Consultar()
    {
        switch (Filtro)
        {
            case "0": //Todo
                ListaCacaos = CacaosBLL.GetList(c => true);
                break;
            case "1": //CacaoId
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        int id = Convert.ToInt32(Criterio);
                        ListaCacaos = CacaosBLL.GetList(c => c.CacaoId == id);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                    }
                }
                else
                {
                    ListaCacaos = CacaosBLL.GetList(c => true).OrderBy(c => c.CacaoId).ToList();
                }
                break;
            case "2": //Tipo
                if (Criterio.Trim().Length > 0)
                    ListaCacaos = CacaosBLL.GetList(c => c.Tipo.Contains(Criterio));
                else
                    ListaCacaos = CacaosBLL.GetList(c => true).OrderBy(c => c.Tipo).ToList();
                break;
            case "3": //Cantidad
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        decimal cantidad = Convert.ToDecimal(Criterio);
                        ListaCacaos = CacaosBLL.GetList(c => c.Cantidad == cantidad);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                    }
                }
                else
                {
                    ListaCacaos = CacaosBLL.GetList(c => true).OrderBy(c => c.Cantidad).ToList();
                }
                break;
            case "4": //Costo
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        decimal costo = Convert.ToDecimal(Criterio);
                        ListaCacaos = CacaosBLL.GetList(c => c.Costo == costo);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                    }
                }
                else
                {
                    ListaCacaos = CacaosBLL.GetList(c => true).OrderBy(c => c.Costo).ToList();
                }
                break;
            case "5": //Precio
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        decimal precio = Convert.ToDecimal(Criterio);
                        ListaCacaos = CacaosBLL.GetList(c => c.Precio == precio);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                    }
                }
                else
                {
                    ListaCacaos = CacaosBLL.GetList(c => true).OrderBy(c => c.Precio).ToList();
                }
                break;
            case "6": //UsuarioId
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        int usuarioId = Convert.ToInt32(Criterio);
                        ListaCacaos = CacaosBLL.GetList(c => c.UsuarioId == usuarioId);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                    }
                }
                else
                {
                    ListaCacaos = CacaosBLL.GetList(c => true).OrderBy(c => c.UsuarioId).ToList();
                }
                break;
        }
    }
}