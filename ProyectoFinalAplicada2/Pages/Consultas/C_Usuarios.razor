@page "/ConsultaUsuarios"

@using BLL;
@using Models;

@inject IToastService toast
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <NotAuthorized>
        <p class="h4 text-center">Usted no esta autorizado para acceder a esta pagina</p>

    </NotAuthorized>
</AuthorizeView>

@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated)
{

    <div class="card">
        <div class="card-header">
            <h1>Consulta de Usuarios</h1>
        </div>

        <div class="card-body">
            <form>
                <div class="col">
                    <label>Filtro</label>
                    <select class="form-control" @bind="Filtro">
                        <option value="0">Todos</option>
                        <option value="1">UsuarioId</option>
                        <option value="2">Nombres</option>
                        <option value="3">Nombre Usuario</option>
                        <option value="4">Clave</option>
                        <option value="5">Email</option>
                        <option value="6">UsuarioId Creacion</option>
                    </select>
                </div>

                <div class="col">
                    <label>Criterio</label>
                    <div class="form-group">
                        <div class="input-group">
                            <input type="text" @bind="Criterio" class="form-control">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="Consultar"><i class="oi oi-list-rich" /> Consultar</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="table-responsive text-nowrap" style="position: relative; height:200px; overflow: auto; display: block;">
                    <table class="table table-striped">
                        <thead class="thead-light">
                            <tr>
                                <th>UsuarioId</th>
                                <th>Nombres</th>
                                <th>Nombre Usuario</th>
                                <th>Clave</th>
                                <th>Email</th>
                                <th>UsuarioId Creacion</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white">
                            @foreach (var usuario in ListaUsuarios)
                            {
                                <tr>
                                    <td>@usuario.UsuarioId</td>
                                    <td>@usuario.Nombres</td>
                                    <td>@usuario.NombreUsuario</td>
                                    <td>@usuario.Clave</td>
                                    <td>@usuario.Email</td>
                                    <td>@usuario.UsuarioIdCreacion</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </form>
        </div>

        <div class="card-footer">
            <div class="form-group text-center">
                <a class="btn btn-lg btn-primary oi oi-file" href="/ReporteUsuarios"> Generar Reporte</a>
            </div>
        </div>
    </div>
}

@code {
    public List<Usuarios> ListaUsuarios { get; set; }

    public string Filtro { get; set; }

    public string Criterio { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
    }

    private void Nuevo()
    {
        ListaUsuarios = new List<Usuarios>();
        Filtro = "0";
        Criterio = string.Empty;
    }

    public void Consultar()
    {
        switch (Filtro)
        {
            case "0": //Todo
                ListaUsuarios = UsuariosBLL.GetList(u => true);
                break;
            case "1": //UsuarioId
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        int id = Convert.ToInt32(Criterio);
                        ListaUsuarios = UsuariosBLL.GetList(u => u.UsuarioId == id);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                    }
                }
                else
                {
                    ListaUsuarios = UsuariosBLL.GetList(u => true).OrderBy(u => u.UsuarioId).ToList();
                }
                break;
            case "2": //Nombres
                if (Criterio.Trim().Length > 0)
                    ListaUsuarios = UsuariosBLL.GetList(u => u.Nombres.Contains(Criterio));
                else
                    ListaUsuarios = UsuariosBLL.GetList(u => true).OrderBy(u => u.Nombres).ToList();
                break;
            case "3": //Nombre Usuario
                if (Criterio.Trim().Length > 0)
                    ListaUsuarios = UsuariosBLL.GetList(u => u.NombreUsuario.Contains(Criterio));
                else
                    ListaUsuarios = UsuariosBLL.GetList(u => true).OrderBy(u => u.NombreUsuario).ToList();
                break;
            case "4": //Clave
                if (Criterio.Trim().Length > 0)
                    ListaUsuarios = UsuariosBLL.GetList(u => u.Clave.Contains(Criterio));
                else
                    ListaUsuarios = UsuariosBLL.GetList(u => true).OrderBy(u => u.Clave).ToList();
                break;
            case "5": //Email
                if (Criterio.Trim().Length > 0)
                    ListaUsuarios = UsuariosBLL.GetList(u => u.Email.Contains(Criterio));
                else
                    ListaUsuarios = UsuariosBLL.GetList(u => true).OrderBy(u => u.Email).ToList();
                break;
            case "6": //UsuarioIdCreacion
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        int idCreacion = Convert.ToInt32(Criterio);
                        ListaUsuarios = UsuariosBLL.GetList(u => u.UsuarioIdCreacion == idCreacion);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                    }
                }
                else
                {
                    ListaUsuarios = UsuariosBLL.GetList(u => true).OrderBy(u => u.UsuarioIdCreacion).ToList();
                }
                break;
        }
    }
}